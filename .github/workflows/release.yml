# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Release

on:
  workflow_dispatch:
    inputs:
      reckonscope:
        description: What scope is the change
        required: true
        type: choice
        default: minor
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: shadowJar -Preckon.scope=${{ inputs.reckonscope }} -Preckon.stage=final

      - name: Get project name and version
        id: project_details
        run: |
          PROJECT_NAME=$(./gradlew -Preckon.scope=${{ inputs.reckonscope }} -Preckon.stage=final -q name)
          PROJECT_VERSION=$(./gradlew -Preckon.scope=${{ inputs.reckonscope }} -Preckon.stage=final -q version)
          echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
          echo "PROJECT_VERSION=${PROJECT_VERSION}" >> $GITHUB_ENV

      - name: Setup Git Identity
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"

      - name: Rename Jar
        run: |
          mv build/libs/$PROJECT_NAME-$PROJECT_VERSION-all.jar build/libs/$PROJECT_NAME-$PROJECT_VERSION.jar

      - name: Release
        run: |
          gh release create $PROJECT_VERSION ./build/libs/*.jar --title "$PROJECT_NAME-$PROJECT_VERSION" --generate-notes --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}